name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: bun install || npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Test
        run: echo "No tests defined yet"

  deploy-vercel:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

  docker-push:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/marketing-site:latest .
          docker push ghcr.io/${{ github.repository }}/marketing-site:latest

  deploy-k8s:
    needs: docker-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Kubeconfig
        run: echo "$KUBECONFIG_BASE64" | base64 -d > kubeconfig
        env:
          KUBECONFIG_BASE64: ${{ secrets.KUBECONFIG_BASE64 }}
      - name: Set KUBECONFIG env
        run: echo "KUBECONFIG=$PWD/kubeconfig" >> $GITHUB_ENV
      - name: Deploy to K8s (kubectl apply)
        run: |
          kubectl apply -f k8s/deployment.yaml
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
